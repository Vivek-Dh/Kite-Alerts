# This block is the crucial fix. It tells Spring Boot that the properties
# in this file should ONLY be applied when the 'test' profile is active,
# and they should completely REPLACE the base configuration for lists/maps, not merge.
server:
  port: 9090

spring:
  config:
    activate:
      on-profile: test
  # This tells Spring Boot not to replace the datasource with an embedded one.
  # We will provide the Testcontainers URL below.
  test:
    database:
      replace: none
  # The magic URL for Testcontainers. It will automatically start a PostgreSQL
  # container and configure the datasource to connect to it.
  datasource:
    url: jdbc:tc:postgresql:15-alpine:///testdb
    username: user
    password: password
    driver-class-name: org.testcontainers.jdbc.ContainerDatabaseDriver
  jpa:
    hibernate:
      ddl-auto: none # We rely entirely on Flyway
  # Flyway is enabled to run our standard V1 migration against the test container.
  flyway:
    enabled: true
  artemis:
    mode: embedded
    embedded:
      enabled: true
      persistent: false
    broker-url: "vm://0?broker.persistent=false"
  jms:
    pub-sub-domain: true
    listener:
      session:
        acknowledge-mode: client

# Test logging configuration
logging:
  pattern:
    console: "%clr(%d{yyyy-MM-dd HH:mm:ss.SSS}){faint} %clr([%-5level]){level} %clr(%-40.40logger{39}){cyan} %clr([%15.40thread]){blue} %clr(:){faint} %replace(%replace(%msg){'(?i)(Published (?:aggregated window for|TriggeredAlertEvent for alertId))','\u001B[35m$1\u001B[0m'}){'(?i)(Matched Alerts for)','\u001B[33m$1\u001B[0m'}%n"
  level:
    root: WARN
    # Suppress Artemis logs
    org.apache.activemq.audit: ERROR
    org.apache.activemq.artemis: WARN
    # Keep your application logs at INFO
    vivek.example.kite: INFO
    # Silence noisy Testcontainers logs
    com.github.dockerjava: WARN
    org.testcontainers: INFO


common:
  alertDefinitionUpdatesTopic: "test.alert.definition.updates"
  aggregatedUpdatesTopic: "test.aggregated.updates"
  triggeredAlertsTopic: "test.triggered.alerts"
  stocks: [ "RELIANCE", "INFY", "WIPRO", "HDFCBANK", "ICICIBANK", "TCS", "SBIN", "KOTAKBANK", "ASIANPAINT", "NESTLEIND" ]
  initial-prices:
    RELIANCE: 2800.0
    HDFCBANK: 1500.0
    ICICIBANK: 950.0
    INFY: 1400.0
    TCS: 3400.0
    SBIN: 580.0
    KOTAKBANK: 1800.0
    WIPRO: 450.0
    ASIANPAINT: 1200.0
    NESTLEIND: 1500.0

# Test-specific JMS topics
tick-processor:
  jms:
    topics:
      rawTicksHighActivity: "test.raw.ticks.high"
      rawTicksMediumActivity: "test.raw.ticks.medium"
      rawTicksLowActivity: "test.raw.ticks.low"
      aggregatedUpdates: "test.aggregated.updates"
  # Configuration for the Mock Tick Producer
  mockProducer:
    enabled: false
    # Stock categories mapping. This drives which topic the ticks are sent to.
    stockCategories:
      HIGH_ACTIVITY: ["RELIANCE", "HDFCBANK", "ICICIBANK"]
      MEDIUM_ACTIVITY: ["INFY",  "TCS", "SBIN", "KOTAKBANK"]
      LOW_ACTIVITY: ["WIPRO", "ASIANPAINT", "NESTLEIND"]
      # Price simulation parameters
    tickVolatility: 0.005 # 0.5%
    driftUpdateTicks: 1000 # Change drift bias every 1000 ticks
    driftBiasRange: 0.1 # New drift bias will be between -0.1 and +0.1
    # Throughput control per category
    frequencyMillis:
      HIGH_ACTIVITY: 50   # ~20 ticks/sec
      MEDIUM_ACTIVITY: 100 # ~10 ticks/sec
      LOW_ACTIVITY: 500  # ~2 ticks/sec

  # Configuration for the Window Aggregator
  windowAggregator:
    enabled: true
    timerCheckIntervalMillis: 1000 # How often to check for closable windows
    # Window durations per category
    windowDurationMillis:
      HIGH_ACTIVITY: 2500
      MEDIUM_ACTIVITY: 5000
      LOW_ACTIVITY: 6000
      # Concurrency settings for JMS listeners per category
    listenerConcurrency:
      HIGH_ACTIVITY: "5-10"
      MEDIUM_ACTIVITY: "3-8"
      LOW_ACTIVITY: "1-5"
  # --- Price Stream Service Configuration ---
  priceStream:
    listenerConcurrency: "1-2" # Lower concurrency for the UI stream is fine

# Define test shards for dynamic assignment
ams:
  shards:
    test-shard-1:
      listener-concurrency: "3-3"
    test-shard-2:
      listener-concurrency: "4-6"
  consistentHashing:
    virtualNodesPerShard: 2 # Lower number for faster test startup
  simulateWorkDelayMs: 1000 # Enable the 1-second delay ONLY for tests
  rocksDb:
    basePath: "/mnt/c/kite_alerts_test/rocksdb"
  outbox:
    relayIntervalMs: 500

